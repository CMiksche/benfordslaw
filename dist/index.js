"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.BenfordsLaw=void 0;const chiSqTest=require("chi-squared-test");class BenfordsLaw{constructor(numbers){this.benfords=[.301,.176,.125,.097,.079,.067,.058,.051,.046],this.result={chiSquared:null,probability:null,terms:null};const occurrences=this.countOccurrences(this.firstDigit(numbers));this.dist=this.countDistribution(occurrences),this.result=chiSqTest(this.dist,this.benfords,0)}firstDigit(numbers){const num=[];return numbers.forEach(number=>{for(;number>=10;)number=Math.floor(number/10);num.push(Math.trunc(number))}),num.filter(n=>0!=n).sort()}countOccurrences(numbers){return numbers.reduce((a,b)=>a.set(b,a.get(b)+1||1),new Map)}countDistribution(occurrences){let sum=0;const res=[];return occurrences.forEach(element=>{sum+=element}),occurrences.forEach(value=>{res.push(value/sum)}),res}getChiSquared(){return this.result.chiSquared}getProbability(){return this.result.probability}getTerms(){return this.result.terms}getDist(){return this.dist}}exports.BenfordsLaw=BenfordsLaw;